# create nodes by instantiation
vaeencodeforinpaint_12 = VAEEncodeForInpaint(grow_mask_by=16)
checkpointloadersimple_4 = CheckpointLoaderSimple(ckpt_name="""dreamshaper_8.safetensors""")
vaeloader_70 = VAELoader(vae_name="""vae-ft-mse-840000-ema-pruned.safetensors""")
checkpointloadersimple_25 = CheckpointLoaderSimple(ckpt_name="""dreamshaper_8Inpainting.safetensors""")
loadimage_78 = LoadImage(image="""iceberg.jpg""")
cliptextencode_7 = CLIPTextEncode(text="""illustration, painting, text, watermark, copyright, signature, notes""")
ksampler_21 = KSampler(seed=1, control_after_generate="""fixed""", steps=20, cfg=7, sampler_name="""dpmpp_2m""", scheduler="""karras""", denoise=1)
imagepadforoutpaint_11 = ImagePadForOutpaint(left=256, top=0, right=256, bottom=0, feathering=0)
cliptextencode_6 = CLIPTextEncode(text="""an image of iceberg""")
saveimage_79 = SaveImage(filename_prefix="""ComfyUI""")
vaedecode_23 = VAEDecode()

# link nodes by invocation
model_4, clip_4, vae_4 = checkpointloadersimple_4()
model_25, clip_25, vae_25 = checkpointloadersimple_25()
conditioning_7 = cliptextencode_7(clip=clip_4)
conditioning_6 = cliptextencode_6(clip=clip_4)
vae_70 = vaeloader_70()
image_78, mask_78 = loadimage_78()
image_11, mask_11 = imagepadforoutpaint_11(image=image_78)
latent_12 = vaeencodeforinpaint_12(pixels=image_11, vae=vae_70, mask=mask_11)
latent_21 = ksampler_21(model=model_25, positive=conditioning_6, negative=conditioning_7, latent_image=latent_12)
image_23 = vaedecode_23(samples=latent_21, vae=vae_70)
result_79 = saveimage_79(images=image_23)
